#type vertex
#version 440 core
			
layout(location = 0) in vec3 vsInPos;
layout(location = 1) in vec2 vsInUV;
layout(location = 2) in vec3 vsInNorm;
			
uniform mat4 u_ViewProjection;

out vec3 vsOutPos;
out vec2 vsOutUV;
out vec3 vsOutNorm;

void main()
{
	vsOutPos = vsInPos;
	vsOutUV = vsInUV;
	vsOutNorm = vsInNorm;
	gl_Position = u_ViewProjection * vec4(vsInPos, 1.0f);
	//gl_Position = vec4(vsInPos, 1.0f);
}

#type fragment
#version 440 core

in vec3 vsOutPos;
in vec2 vsOutUV;
in vec3 vsOutNorm;

layout(location = 0) out vec4 fsOutCol;
			
void main()
{
	//fsOutCol = vec4(0.8f, 0.2f, 0.3f, 1.0f);			
	
	//fsOutCol = vec4(vsOutPos, 1.0f);
	fsOutCol = vec4(vsOutUV, 0.0f, 1.0f);
	//fsOutCol = vec4(vsOutNorm, 1.0f);
}